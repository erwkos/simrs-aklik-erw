# Generated by Django 3.2.12 on 2023-05-26 17:28

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nama', models.CharField(max_length=100)),
                ('keterangan', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id_number', models.CharField(blank=True, max_length=20, null=True)),
                ('nama_depan', models.CharField(max_length=255)),
                ('nama_belakang', models.CharField(blank=True, max_length=255, null=True)),
                ('nip', models.CharField(blank=True, max_length=20, null=True)),
                ('level', models.CharField(blank=True, max_length=50, null=True)),
                ('jenis_kelamin', models.CharField(choices=[('Pria', 'Pria'), ('Wanita', 'Wanita')], max_length=10)),
                ('tanggal_lahir', models.DateField(blank=True, null=True)),
                ('agama', models.CharField(blank=True, max_length=50, null=True)),
                ('no_kartu_keluarga', models.CharField(blank=True, max_length=20, null=True)),
                ('posisi_di_keluarga', models.CharField(blank=True, max_length=50, null=True)),
                ('pendidikan_terakhir', models.CharField(blank=True, max_length=255, null=True)),
                ('profesi', models.CharField(blank=True, max_length=255, null=True)),
                ('pekerjaan', models.CharField(blank=True, max_length=255, null=True)),
                ('no_npwp', models.CharField(blank=True, max_length=20, null=True)),
                ('sip', models.CharField(blank=True, max_length=20, null=True)),
                ('nama_ibu_kandung', models.CharField(blank=True, max_length=255, null=True)),
                ('golongan', models.CharField(blank=True, max_length=50, null=True)),
                ('pangkat', models.CharField(blank=True, max_length=50, null=True)),
                ('status_karyawan', models.CharField(blank=True, max_length=50, null=True)),
                ('unit_kerja', models.CharField(blank=True, max_length=255, null=True)),
                ('no_sk_pengangkatan', models.CharField(blank=True, max_length=20, null=True)),
                ('tanggal_sk_pengangkatan', models.DateField(blank=True, null=True)),
                ('tanggal_masuk_rs', models.DateField(blank=True, null=True)),
                ('no_telepon', models.CharField(blank=True, max_length=15, null=True)),
                ('alamat', models.TextField(blank=True, null=True)),
                ('alamat_kelurahan', models.CharField(blank=True, max_length=255, null=True)),
                ('alamat_kecamatan', models.CharField(blank=True, max_length=255, null=True)),
                ('alamat_kabupaten_kota', models.CharField(blank=True, max_length=255, null=True)),
                ('alamat_provinsi', models.CharField(blank=True, max_length=255, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='user.userrole')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
